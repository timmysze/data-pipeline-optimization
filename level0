#!/usr/bin/env ruby
path = ARGV.length > 0 ? ARGV[0] : '/usr/share/dict/words'
$dict = File.read(path).split("\n")

mid = $dict[117468]

# def check(word, left, right)
#   mid_index = (right - left) / 2 + left
#   mid_word = $dict[mid_index]
#   if mid_word == word
#     return true
#   elsif (right - left) == 1
#     if $dict[mid_index + 1] == word
#       return true
#     else
#       return false
#     end
#   else
#     if (word < mid_word)
#       return check(word, left, mid_index - 1)
#     else
#       return check(word, mid_index + 1, right)
#     end
#   end

#   false
# end

def check(word, left, right)
  go = true
  output = false
  while go

    mid_index = (right - left) / 2 + left
    mid_word = $dict[mid_index]

    # puts word + ', ' + left.to_s + ', ' + mid_index.to_s + ', ' + right.to_s + ', ' + mid_word
    if (right - left) == 0

      if word == mid_word
        output = true
        go = false
      else
        output = false
        go = false
      end

    elsif (right - left) == 1

      if word == mid_word || word == $dict[mid_index + 1]
        output = true
        go = false
      else
        output = false
        go = false
      end

    else

      if word == mid_word
        output = true
        go = false
      elsif (word < $dict[mid_index].downcase)
        right = mid_index - 1
      else
        left = mid_index + 1
      end

    end

  end

  return output

end

contents = $stdin.read
output = contents.gsub(/[^ \n]+/) do |word|
  w = word.downcase

  # if word.downcase == word
    c = check(w, 0, 234936)
  # else
    # c = false
  # end

  if c
    word
  else
    "<#{word}>"
  end
end
print output
